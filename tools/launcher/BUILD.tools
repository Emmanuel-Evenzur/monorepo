load("@platforms//host:constraints.bzl", "HOST_CONSTRAINTS")
load(
    "//tools:build_defs.bzl",
    "IS_HOST_WINDOWS",
    "current_launcher_binary",
    "current_launcher_maker_binary",
    "single_binary_toolchain",
)

package(default_visibility = ["//visibility:public"])

current_launcher_binary(name = "launcher")

current_launcher_maker_binary(name = "launcher_maker")

# WARNING: These toolchain types and their associated toolchains only exist for
# the purposes of rulesets formerly included in Bazel itself and may change or
# be removed at any time.

toolchain_type(
    name = "launcher_toolchain_type",
    visibility = ["//visibility:private"],
)

toolchain_type(
    name = "launcher_maker_toolchain_type",
    visibility = ["//visibility:private"],
)

# Toolchains are prefixed with a number to ensure that their order of definition
# matches their precedence in the toolchain resolution process when registered
# with a wildcard pattern (which sorts by name).
# TODO(#19587): Make all prebuilt binaries available in external repos and add
#  toolchains for them below so that cross-platform builds can use them without
#  needing to build from source.
IS_HOST_WINDOWS and single_binary_toolchain(
    name = "1_prebuilt_launcher",
    binary = "launcher.exe",
    target_compatible_with = HOST_CONSTRAINTS,
    toolchain_type = ":launcher_toolchain_type",
)

single_binary_toolchain(
    name = "2_source_launcher_toolchain",
    binary = "//src/tools/launcher",
    target_compatible_with = ["@platforms//os:windows"],
    toolchain_type = ":launcher_toolchain_type",
)

single_binary_toolchain(
    name = "3_no_launcher_toolchain",
    toolchain_type = ":launcher_toolchain_type",
)

IS_HOST_WINDOWS and single_binary_toolchain(
    name = "1_prebuilt_launcher_maker",
    binary = "launcher_maker.exe",
    exec_compatible_with = HOST_CONSTRAINTS,
    target_compatible_with = ["@platforms//os:windows"],
    toolchain_type = ":launcher_maker_toolchain_type",
)

single_binary_toolchain(
    name = "2_source_launcher_maker_toolchain",
    binary = "//src/tools/launcher:launcher_maker",
    target_compatible_with = ["@platforms//os:windows"],
    toolchain_type = ":launcher_maker_toolchain_type",
)

single_binary_toolchain(
    name = "3_no_launcher_maker_toolchain",
    toolchain_type = ":launcher_maker_toolchain_type",
)
